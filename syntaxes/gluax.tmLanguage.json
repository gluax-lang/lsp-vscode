{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "gluax",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#preprocessor"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#types"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#punctuations"
		},
		{
			"include": "#braces"
		},
		{
			"include": "#catch_block"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.gluax",
					"match": "//.*$"
				},
				{
					"name": "comment.block.gluax",
					"begin": "/\\*",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.gluax"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.gluax"
						}
					},
					"patterns": []
				}
			]
		},
		"preprocessor": {
			"patterns": [
				{
					"name": "meta.preprocessor.gluax",
					"match": "^(\\s*#)(\\s*(?:define|undef|ifdef|ifndef|elif|else|endif))(\\b.*)$",
					"captures": {
						"1": {
							"name": "comment.line.preprocessor.gluax"
						},
						"2": {
							"name": "comment.line.preprocessor.gluax"
						},
						"3": {
							"name": "source.gluax"
						}
					}
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.raw.gluax",
					"begin": "r(#*)\"",
					"end": "\"\\1",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.gluax"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.gluax"
						}
					}
				},
				{
					"name": "string.quoted.double.gluax",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"include": "#escapes"
						}
					]
				}
			]
		},
		"escapes": {
			"patterns": [
				{
					"name": "constant.character.escape.line-continuation.gluax",
					"match": "\\\\\\r?\\n"
				},
				{
					"name": "constant.character.escape.special.gluax",
					"match": "\\\\[abfnrtv\\\\\"']"
				},
				{
					"name": "constant.character.escape.whitespace-skip.gluax",
					"match": "\\\\z"
				},
				{
					"name": "constant.character.escape.hex.gluax",
					"match": "\\\\x[0-9a-fA-F]{2}"
				},
				{
					"name": "constant.character.escape.unicode.gluax",
					"match": "\\\\u\\{[0-9a-fA-F]+\\}"
				},
				{
					"name": "constant.character.escape.decimal.gluax",
					"match": "\\\\[0-9]{1,3}"
				},
				{
					"name": "invalid.illegal.unknown-escape.gluax",
					"match": "\\\\."
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.gluax",
					"match": "\\belse\\s+if\\b"
				},
				{
					"name": "keyword.control.gluax",
					"match": "\\b(unsafe_cast_as|if|while|loop|return|func|let|const|else|import|trait|class|impl|self|Self|throw|pub|for|as|use|break|continue|dyn|in)\\b"
				},
				{
					"name": "keyword.control.run_lua",
					"match": "(?<!\\w)@run_lua\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.gluax",
					"match": "\\b(string|bool|number|nil|any|vec|map|option|anyfunc|table|unreachable)\\b"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.hex.gluax",
					"match": "\\b0[xX][0-9a-fA-F_]+\\b"
				},
				{
					"name": "constant.numeric.float.gluax",
					"match": "\\b\\d[\\d_]*\\.\\d[\\d_]*([eE][+-]?\\d[\\d_]*)?\\b"
				},
				{
					"name": "constant.numeric.scientific.gluax",
					"match": "\\b\\d[\\d_]*[eE][+-]?\\d[\\d_]*\\b"
				},
				{
					"name": "constant.numeric.integer.gluax",
					"match": "\\b\\d[\\d_]*\\b"
				}
			]
		},
		"booleans": {
			"patterns": [
				{
					"name": "constant.language.boolean.gluax",
					"match": "\\b(true|false)\\b"
				}
			]
		},
		"punctuations": {
			"patterns": [
				{
					"name": "punctuation.operator.gluax",
					"match": "(\\.{3}|<<|>>|==|!=|<=|>=|&&|\\|\\||\\.\\.|->|\\*\\*|\\+|\\-|\\*|\\/|%|<|>|=|\\^|#|!|;|:|,|\\(|\\)|\\{|\\}|\\[|\\]|\\.|\\||~|&)"
				}
			]
		},
		"braces": {
			"patterns": [
				{
					"name": "punctuation.section.block.begin.gluax",
					"match": "\\{"
				},
				{
					"name": "punctuation.section.block.end.gluax",
					"match": "\\}"
				}
			]
		},
		"catch_block": {
			"patterns": [
				{
					"begin": "\\b(catch)\\s+((\\p{L}|_)(\\p{L}|\\p{N}|_)*)\\b",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.catch.gluax"
						},
						"2": {
							"name": "variable.parameter.catch.gluax"
						}
					},
					"end": "(?=\\s*\\{)",
					"patterns": []
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "identifier.gluax",
					"match": "(\\p{L}|_)(\\p{L}|\\p{N}|_)*"
				}
			]
		}
	},
	"scopeName": "source.gluax"
}
